name: List and Deploy PR Changed Files

on:
  pull_request:
    types: [closed]
    branches:
      - develop

jobs:
  list-files:
    runs-on: self-hosted
    outputs:
      changed_files: ${{ steps.check.outputs.changed_files }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Get PR number and check changed files
        id: check
        env:
          GH_TOKEN: ${{ secrets.JEGANMERGE }}
        run: |
          pr_number=${{ github.event.pull_request.number }}
          echo "PR Number: $pr_number"
          changed_files=$(gh pr view $pr_number --json files --jq '.files[].path')
          echo "Changed files from gh command: $changed_files"
          changed_files_single_line=$(echo "$changed_files" | tr '\n' ' ')
          echo "changed_files=$changed_files_single_line" >> $GITHUB_ENV
          echo "::set-output name=changed_files::$changed_files_single_line"

  deploy:
    runs-on: ubuntu-latest
    needs: list-files

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get changed files from previous step
        id: get_changed_files
        run: |
          changed_files="${{ needs.list-files.outputs.changed_files }}"
          echo "Changed files: $changed_files"
          echo "$changed_files" > changed_files.txt

      - name: Check if changed files are present
        run: |
          if [ -s changed_files.txt ]; then
            echo "Changed files detected, proceeding with deployment."
          else
            echo "No changed files found, skipping deployment."
            exit 0
          fi

      - name: Deploy Changed Files to Remote Server
        if: success() && needs.list-files.outputs.changed_files != ''
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_GCP }}
          REMOTE_USER: ${{ secrets.REMOTE_USER_GCP }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST_GCP }}
          DEPLOY_PATH: "/home/Jegan/www_profitokrs_com_6_4_1"
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key
          mkdir -p ~/.ssh
          ssh-keyscan -H $REMOTE_HOST >> ~/.ssh/known_hosts

          changed_files="${{ needs.list-files.outputs.changed_files }}"
          if [ -z "$changed_files" ]; then
            echo "No files to deploy."
            exit 0
          fi

          files=($changed_files)
          for file in "${files[@]}"; do
            # Use the relative path to the file
            echo "Attempting to copy $file to $REMOTE_USER@$REMOTE_HOST:$DEPLOY_PATH/$file"
            scp -o StrictHostKeyChecking=no -i private_key "$file" "$REMOTE_USER@$REMOTE_HOST:$DEPLOY_PATH/$file"
            if [ $? -ne 0 ]; then
              echo "Error occurred while copying $file."
              exit 1
            fi
            echo "$file copied successfully."
          done
